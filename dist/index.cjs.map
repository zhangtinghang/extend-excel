{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import * as XLSX from 'xlsx';\nimport FileSaver from 'file-saver';\nimport { chain, cloneDeep } from 'lodash';\nconst exportExcel = (headers, sourceData, options = {\n    fileName: 'export',\n    sheetName: 'sheet1',\n    XLSXOption: {}\n}) => {\n    const { fileName, sheetName, XLSXOption } = options;\n    if (!sourceData || !Array.isArray(sourceData)) {\n        throw new Error('The sourceData needs to be in array format!');\n    }\n    // 处理header和value值映射\n    const data = chain(sourceData)\n        .map((item) => {\n        const ne = cloneDeep(item);\n        const newRzt = Object.keys(ne).reduce((newData, key) => {\n            if (headers[key]) {\n                if (headers[key] && typeof headers[key] === 'object') {\n                    const tkey = headers[key].key;\n                    const fVal = headers[key].filter(ne[key]);\n                    newData[tkey] = fVal;\n                }\n                else {\n                    newData[headers[key]] = ne[key];\n                }\n            }\n            return newData;\n        }, {});\n        return newRzt;\n    })\n        .value();\n    const workbook = XLSX.utils.book_new();\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    XLSX.utils.book_append_sheet(workbook, worksheet, sheetName);\n    // bookType: file type of output，type：data type of out，bookSST: is Shared String Table，eg: 官方解释是，如果开启生成速度会下降，但在低版本IOS设备上有更好的兼容性\n    const wopts = {\n        bookType: 'xlsx',\n        bookSST: false,\n        type: 'array',\n        ...XLSXOption\n    };\n    const wbout = XLSX.write(workbook, wopts);\n    FileSaver.saveAs(new Blob([wbout], { type: 'application/octet-stream' }), `${fileName}.xlsx`);\n};\nconst importExcel = (file, options = {\n    onlyFirst: false,\n    XLSXReadOptions: {}\n}) => {\n    const { onlyFirst, XLSXReadOptions } = options;\n    const name = file.name;\n    const reader = new FileReader();\n    reader.readAsBinaryString(file);\n    return new Promise((resolve, reject) => {\n        reader.onload = (evt) => {\n            try {\n                const data = evt.target?.result;\n                const workbook = XLSX.read(data, { type: 'binary', ...XLSXReadOptions });\n                let persons = []; // 存储获取到的数据\n                // 遍历每张表读取\n                for (var sheet in workbook.Sheets) {\n                    if (workbook.Sheets.hasOwnProperty(sheet)) {\n                        workbook.Sheets[sheet]['!ref'];\n                        persons = persons.concat(XLSX.utils.sheet_to_json(workbook.Sheets[sheet]));\n                        // 如果只取第一张表，就取消注释这行\n                        if (onlyFirst)\n                            break;\n                        // break;\n                    }\n                }\n                resolve({ name, data: persons });\n            }\n            catch (e) {\n                reject(e);\n            }\n        };\n    });\n};\nexport default {\n    importExcel,\n    exportExcel\n};\n"],"names":["index","importExcel","file","options","onlyFirst","XLSXReadOptions","name","reader","FileReader","readAsBinaryString","Promise","resolve","reject","onload","evt","data","target","result","workbook","XLSX","read","type","persons","sheet","Sheets","hasOwnProperty","concat","utils","sheet_to_json","e","exportExcel","headers","sourceData","fileName","sheetName","XLSXOption","Array","isArray","Error","chain","map","item","ne","cloneDeep","Object","keys","reduce","newData","key","tkey","fVal","filter","value","book_new","worksheet","json_to_sheet","book_append_sheet","wopts","bookType","bookSST","wbout","write","FileSaver","saveAs","Blob"],"mappings":"4OA8EA,IAAeA,EAAA,CACXC,YAlCgB,CAACC,EAAMC,EAAU,CACjCC,WAAW,EACXC,gBAAiB,CAAE,MAEnB,MAAMD,UAAEA,EAASC,gBAAEA,GAAoBF,EACjCG,EAAOJ,EAAKI,KACZC,EAAS,IAAIC,WAEnB,OADAD,EAAOE,mBAAmBP,GACnB,IAAIQ,SAAQ,CAACC,EAASC,KACzBL,EAAOM,OAAUC,IACb,IACI,MAAMC,EAAOD,EAAIE,QAAQC,OACnBC,EAAWC,EAAKC,KAAKL,EAAM,CAAEM,KAAM,YAAahB,IACtD,IAAIiB,EAAU,GAEd,IAAK,IAAIC,KAASL,EAASM,OACvB,GAAIN,EAASM,OAAOC,eAAeF,KAE/BD,EAAUA,EAAQI,OAAOP,EAAKQ,MAAMC,cAAcV,EAASM,OAAOD,KAE9DnB,GACA,MAIZO,EAAQ,CAAEL,OAAMS,KAAMO,GACzB,CACD,MAAOO,GACHjB,EAAOiB,EACV,EACJ,GACH,EAIFC,YA7EgB,CAACC,EAASC,EAAY7B,EAAU,CAChD8B,SAAU,SACVC,UAAW,SACXC,WAAY,CAAE,MAEd,MAAMF,SAAEA,EAAQC,UAAEA,EAASC,WAAEA,GAAehC,EAC5C,IAAK6B,IAAeI,MAAMC,QAAQL,GAC9B,MAAM,IAAIM,MAAM,+CAGpB,MAAMvB,EAAOwB,EAAKA,MAACP,GACdQ,KAAKC,IACN,MAAMC,EAAKC,YAAUF,GAcrB,OAbeG,OAAOC,KAAKH,GAAII,QAAO,CAACC,EAASC,KAC5C,GAAIjB,EAAQiB,GACR,GAAIjB,EAAQiB,IAAgC,iBAAjBjB,EAAQiB,GAAmB,CAClD,MAAMC,EAAOlB,EAAQiB,GAAKA,IACpBE,EAAOnB,EAAQiB,GAAKG,OAAOT,EAAGM,IACpCD,EAAQE,GAAQC,CACnB,MAEGH,EAAQhB,EAAQiB,IAAQN,EAAGM,GAGnC,OAAOD,CAAO,GACf,CAAE,EACQ,IAEZK,QACClC,EAAWC,EAAKQ,MAAM0B,WACtBC,EAAYnC,EAAKQ,MAAM4B,cAAcxC,GAC3CI,EAAKQ,MAAM6B,kBAAkBtC,EAAUoC,EAAWpB,GAElD,MAAMuB,EAAQ,CACVC,SAAU,OACVC,SAAS,EACTtC,KAAM,WACHc,GAEDyB,EAAQzC,EAAK0C,MAAM3C,EAAUuC,GACnCK,EAAUC,OAAO,IAAIC,KAAK,CAACJ,GAAQ,CAAEvC,KAAM,6BAA+B,GAAGY,SAAgB"}