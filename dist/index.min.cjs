"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("xlsx"),t=require("file-saver"),r=require("lodash");var o=function(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var o=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,o.get?o:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}(e);const n=(e,n,s)=>{const{fileName:a="export",sheetName:c="sheet1",XLSXOption:i={}}=s||{};if(!n||!Array.isArray(n))throw new Error("The sourceData needs to be in array format!");const l=r.chain(n).map((t=>{const o=r.cloneDeep(t);return Object.keys(o).reduce(((t,r)=>{if(e[r])if(e[r]&&"object"==typeof e[r]){const n=e[r].key,s=e[r].filter(o[r]);t[n]=s}else t[e[r]]=o[r];return t}),{})})).value(),p=o.utils.book_new(),u=o.utils.json_to_sheet(l);o.utils.book_append_sheet(p,u,c);const y={bookType:"xlsx",bookSST:!1,type:"array",...i},f=o.write(p,y);t.saveAs(new Blob([f],{type:"application/octet-stream"}),`${a}.xlsx`)},s=(e,t)=>{const{onlyFirst:r=!1,XLSXReadOptions:n={},keyMapping:s={}}=t||{},c=e.name,i=new FileReader;return i.readAsBinaryString(e),new Promise(((e,t)=>{i.onload=i=>{try{const t=i.target?.result,p=o.read(t,{type:"binary",...n});let u=[];for(var l in p.Sheets)if(p.Sheets.hasOwnProperty(l)&&(u=u.concat(o.utils.sheet_to_json(p.Sheets[l])),r))break;s&&Reflect.ownKeys(s).length>0&&(u=a(u,s)),e({name:c,data:u})}catch(e){t(e)}}}))},a=(e,t)=>{const r=[];for(let o=0;o<e.length;o++){const n=e[o],s={};for(const e in t)Object.prototype.hasOwnProperty.call(n,e)&&(s[t[e]]=n[e]);Reflect.ownKeys(s).length>0&&r.push(s)}return r},c={importExcel:s,exportExcel:n,keysMapping:a};exports.default=c,exports.exportExcel=n,exports.importExcel=s,exports.keysMapping=a;
